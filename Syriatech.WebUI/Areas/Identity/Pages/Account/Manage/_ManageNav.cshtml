@inject SignInManager<Syriatech.Domain.Entities.User> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
@using Microsoft.AspNetCore.Mvc.Localization;
@inject IViewLocalizer Localizer
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">@Localizer["Profile"]</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.LinksNavClass(ViewContext)" id="links" asp-page="./links">@Localizer["Links"]</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ProjectsNavClass(ViewContext)" id="projects" asp-page="./Projects">@Localizer["Projects"]</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">@Localizer["Password"]</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">@Localizer["External logins"]</a></li>
    }
    <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">@Localizer["Two-factor authentication"]</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">@Localizer["Personal data"]</a></li>
</ul>
